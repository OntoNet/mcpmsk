version: "3.9"

services:
  pg:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_DB: ${PG_DB}
    volumes: [ "pg_data:/var/lib/postgresql/data" ]
    ports: [ "5432:5432" ]
    networks: [ core ]

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes: [ "minio_data:/data" ]
    ports: [ "9000:9000", "9001:9001" ]
    networks: [ core ]

  redis:
    image: redis:7
    networks: [ core ]

  airflow-init:
    image: apache/airflow:2.9.3
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db init && \\
        airflow users create \\
          --username admin --password admin \\
          --firstname A --lastname D --role Admin --email admin@example.com
    environment: &af-env
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${PG_USER}:${PG_PASSWORD}@pg:5432/${PG_DB}
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://${PG_USER}:${PG_PASSWORD}@pg:5432/${PG_DB}
    user: "50000:0"
    volumes:
      - airflow_dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
    depends_on:
      - pg
      - redis
    networks: [ core ]

  airflow-webserver:
    image: apache/airflow:2.9.3
    command: webserver
    environment: *af-env
    user: "50000:0"
    ports: [ "8080:8080" ]
    volumes:
      - airflow_dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
    depends_on:
      - airflow-init
    networks: [ core ]

  airflow-scheduler:
    image: apache/airflow:2.9.3
    command: scheduler
    environment: *af-env
    user: "50000:0"
    volumes:
      - airflow_dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
    depends_on:
      - airflow-webserver
    networks: [ core ]

  airflow-worker:
    image: apache/airflow:2.9.3
    command: celery worker
    environment: *af-env
    user: "50000:0"
    volumes:
      - airflow_dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
    depends_on:
      - airflow-scheduler
    networks: [ core ]

  mcp:
    build:
      context: ./mcpmsk
    image: mcpmsk:local
    environment:
      MCP_TRANSPORT: "http"
      PORT: "8899"
      KEYCLOAK_BASE_URL: "https://app.ontonet.ru"
      KEYCLOAK_REALM: "onto"
      KEYCLOAK_CLIENT_ID: "frontend-prod"
      ONTO_API_BASE: ${ONTO_API_BASE}
      ONTO_API_TOKEN: ${ONTO_API_TOKEN}
      ONTO_REALM_ID: ${ONTO_REALM_ID}
      ONTO_META_COLUMNSIGN_NAME: ${ONTO_META_COLUMNSIGN_NAME}
      ONTO_META_PIPELINE_NAME: ${ONTO_META_PIPELINE_NAME}
      ONTO_DEBUG_HTTP: ${ONTO_DEBUG_HTTP}
      ONTO_BUILD_VERSION: ${ONTO_BUILD_VERSION}
      SESSION_STATE_API_KEY: ${SESSION_STATE_API_KEY}
      AIRFLOW_API_URL: http://airflow-webserver:8080
      AIRFLOW_API_USER: admin
      AIRFLOW_API_PASS: admin
      STAGING_S3_ENDPOINT: http://minio:9000
      STAGING_S3_ACCESS_KEY: ${MINIO_ROOT_USER}
      STAGING_S3_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
      PG_URL: postgresql://${PG_USER}:${PG_PASSWORD}@pg:5432/${PG_DB}
    ports:
      - "8899:8899"
    depends_on:
      - pg
      - airflow-webserver
      - minio
    networks: [ core ]



networks:
  core: {}

volumes:
  pg_data:
  minio_data:
  airflow_dags:
  airflow_logs:
